name: Deploy on Release or Pre-release

on:
  release:
    types: [created]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Release Information
        id: release_info
        run: |
          echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"
          echo "::set-output name=prerelease::${{ github.event.release.prerelease }}"

      - name: Build Docker Image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/my-application:${{ steps.release_info.outputs.tag }} .

      - name: Push Docker Image to GitHub Container Registry
        run: |
          docker push ghcr.io/${{ github.repository }}/my-application:${{ steps.release_info.outputs.tag }}

      - name: Set Pulumi Tag Variable
        run: |
          pulumi config set tag ${steps.release_info.outputs.tag}
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

      - name: Set Project Name Variable
        run: echo "PROJECT_NAME=MyProject" >> $GITHUB_ENV

      - name: Create Release in Octopus Deploy
        id: octopus_release
        run: |
          octo create-release \
            --project "${{ env.PROJECT_NAME }}" \
            --version "${{ steps.release_info.outputs.tag }}" \
            --packageversion "${{ steps.release_info.outputs.tag }}" \
            --server "${{ secrets.OCTOPUS_SERVER }}" \
            --apiKey "${{ secrets.OCTOPUS_API_KEY }}" \
            --releaseNotes "Release created from GitHub Actions."

      - name: Deploy to Staging Environment
        run: |
          octo deploy-release \
            --project "${{ env.PROJECT_NAME }}" \
            --releaseNumber "${{ steps.release_info.outputs.tag }}" \
            --deployto "Staging" \
            --progress \
            --server "${{ secrets.OCTOPUS_SERVER }}" \
            --apiKey "${{ secrets.OCTOPUS_API_KEY }}"

      - name: Notify for Production Deployment Approval
        if: ${{ steps.release_info.outputs.prerelease == 'false' }}
        run: |
          echo "Release ${{ steps.release_info.outputs.tag }} created. Awaiting manual approval for production deployment."
