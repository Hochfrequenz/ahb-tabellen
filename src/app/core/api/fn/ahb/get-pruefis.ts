/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { FormatVersion } from '../../models/format-version';

export interface GetPruefis$Params {

/**
 * Formatversion of the AHB to return
 */
  'format-version': FormatVersion;

/**
 * Whether to include descriptions with the Pruefidentifikators
 */
  include_descriptions?: boolean;
}

export function getPruefis(http: HttpClient, rootUrl: string, params: GetPruefis$Params, context?: HttpContext): Observable<StrictHttpResponse<(Array<string> | Array<{
'pruefi'?: string;
'description'?: string;
}>)>> {
  const rb = new RequestBuilder(rootUrl, getPruefis.PATH, 'get');
  if (params) {
    rb.path('format-version', params['format-version'], {});
    rb.query('include_descriptions', params.include_descriptions, {});
  }

  return http.request(
    rb.build({ responseType: 'json', accept: 'application/json', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<(Array<string> | Array<{
      'pruefi'?: string;
      'description'?: string;
      }>)>;
    })
  );
}

getPruefis.PATH = '/api/format-versions/{format-version}/pruefis';
